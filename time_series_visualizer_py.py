# -*- coding: utf-8 -*-
"""time_series_visualizer.py.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iP6pWzMo3Hh_z1ltXmiIvMDMw-GYgWbD
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# 1. Cargar y limpiar los datos

# Cargar los datos y establecer la columna de fecha como índice
df = pd.read_csv('fcc-forum-pageviews.csv', parse_dates=['date'], index_col='date')
df.head()

# Filtrar datos en el rango del 2.5% inferior y superior
df_cleaned = df[(df['value'] >= df['value'].quantile(0.025)) & (df['value'] <= df['value'].quantile(0.975))]

# 2. Gráfico de líneas
def draw_line_plot():
    plt.figure(figsize=(15,6))
    plt.plot(df_cleaned.index, df_cleaned['value'], color='red', linewidth=1)
    plt.title('Daily freeCodeCamp Forum Page Views 5/2016-12/2019', fontsize=16)
    plt.xlabel('Date', fontsize=12)
    plt.ylabel('Page Views', fontsize=12)
    plt.grid(True)
    plt.tight_layout()
    plt.savefig('line_plot.png')
    plt.show()

# Llamar a la función para dibujar el gráfico de líneas
draw_line_plot()

# 3. Gráfico de barras
def draw_bar_plot():
    # Preparar datos: Agrupar por año y mes
    df_bar = df_cleaned.copy()
    df_bar['year'] = df_bar.index.year
    df_bar['month'] = df_bar.index.month_name()

    # Agrupar por año y mes
    df_bar_grouped = df_bar.groupby([df_bar['year'], df_bar['month']])['value'].mean().unstack()

    # Crear gráfico de barras
    df_bar_grouped.plot(kind='bar', figsize=(10,8), legend=True)
    plt.title('Average Page Views per Month', fontsize=16)
    plt.xlabel('Years', fontsize=12)
    plt.ylabel('Average Page Views', fontsize=12)
    plt.legend(title='Months', bbox_to_anchor=(1.05, 1), loc='upper left')
    plt.tight_layout()
    plt.savefig('bar_plot.png')
    plt.show()

# Llamar a la función para dibujar el gráfico de barras
draw_bar_plot()

# 4. Diagrama de caja

def draw_box_plot():
    # Preparar datos para diagramas de cajas
    df_box = df_cleaned.copy()
    df_box['year'] = df_box.index.year
    df_box['month'] = df_box.index.strftime('%b')

    # Ordenar los meses
    months_order = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']

    # Crear la figura y los diagramas de cajas
    fig, axes = plt.subplots(1, 2, figsize=(15, 6))

    sns.boxplot(x='year', y='value', data=df_box, ax=axes[0])
    axes[0].set_title('Year-wise Box Plot (Trend)', fontsize=16)
    axes[0].set_xlabel('Year', fontsize=12)
    axes[0].set_ylabel('Page Views', fontsize=12)

    sns.boxplot(x='month', y='value', data=df_box, order=months_order, ax=axes[1])
    axes[1].set_title('Month-wise Box Plot (Seasonality)', fontsize=16)
    axes[1].set_xlabel('Month', fontsize=12)
    axes[1].set_ylabel('Page Views', fontsize=12)

    plt.tight_layout()
    plt.savefig('box_plot.png')
    plt.show()

# Llamar a la función para dibujar los diagramas de caja
draw_box_plot()